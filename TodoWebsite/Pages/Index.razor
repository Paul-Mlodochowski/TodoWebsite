@page "/"
@inject TodoDatabaseContex Db


<main class="w-100 d-flex flex-row">
    <section class="w-50 d-flex flex-column">

    <h1 class="mb-3">Todo List</h1>
    
    <div class="list-group w-55">
    @foreach(var TodoItem in List){
      <div  class="list-group-item list-group-item-action  mb-3" aria-current="true">
        <div class="d-flex flex-row w-100 justify-content-between">
          <h3 class="mb-3 fs-2 fw-bold">@TodoItem.Title</h3>
          <div class="d-flex flex-row">
              <small>@TodoItem.Date</small>
              <a class="ml-3 pe-auto">
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#6610f2" class="bi bi-pencil" viewBox="0 0 16 16">
                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"/>
                  </svg>
              </a>
              <a class="ml-3 pe-auto" @onclick="()=>{Delete(TodoItem.Id);}">
                 <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#dc3545" class="bi bi-x-square" viewBox="0 0 16 16">
                  <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                </svg>
              </a>
          </div>
        </div>
        <p class="mb-1 w-75 text-break">@TodoItem.Description</p>
       <div class="d-flex w-100 justify-content-between">

        <small class="tags-color">
            @foreach(var tag in TodoItem.Tags){
                    @tag.TagValue
            }
         </small>
         <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
            <label class="form-check-label" for="flexCheckDefault">
            Is Done
            </label>
         </div>
       </div>
      </div>
    }
    <button type="button" class="btn btn-primary w-25 align-self-xl-end mb-4" data-bs-toggle="button" autocomplete="off" @onclick="()=>Modal.Open()" >Add new Task</button>

    </div>
   </section>
    <section>
        Filtrowanie
    </section>
</main>

<TodoWebsite.Pages.Components.Popout @ref="Modal" AddToDb="AddNewTodoTask"></TodoWebsite.Pages.Components.Popout>


@code{

    private TodoWebsite.Pages.Components.Popout Modal { get; set; }
    private List<TodoList> List { get; set; } = new List<TodoList>();
    private List<Tag> ListOfTags { get; set; } = new List<Tag>();

    protected override void OnInitialized() {
        using (var dbContext = Db)
        {

            dbContext.Database.EnsureCreated();

            foreach (var item in dbContext.TodoLists)
            {
                dbContext.Tags.Where(tag => tag.TodoListId == item.Id ).ToList<Tag>();  // To dodaje tagi do items
                List.Add(item);
            }

        }

        base.OnInitialized();
    }
    private void ShowResults() {
        List.Clear();
        using(var dbContex = new TodoDatabaseContex()){
            foreach (var item in dbContex.TodoLists)
            {
                dbContex.Tags.Where(tag => tag.TodoListId == item.Id ).ToList<Tag>();  // To dodaje tagi do items
                List.Add(item);
            }
        }
    }
    private void AddNewTodoTask(TodoList list) {
        using(var dbContex = new TodoDatabaseContex()){
            dbContex.TodoLists.Add(list);
            dbContex.AddRange(list.Tags);
            dbContex.SaveChanges();
            ShowResults();
        }
    }
    private void Delete(int id) {
        using(var dbContex = new TodoDatabaseContex()){

            var itemToDelete = dbContex.TodoLists.Where(item => item.Id == id).FirstOrDefault<TodoList>();
            var tagsToDelete = dbContex.Tags.Where(item => item.TodoListId == itemToDelete.Id);
            dbContex.TodoLists.Remove(itemToDelete);
            dbContex.RemoveRange(tagsToDelete);
            dbContex.SaveChanges();
            ShowResults();
        }
    }

   
}